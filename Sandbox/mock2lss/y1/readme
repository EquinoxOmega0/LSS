1) Use path 
/global/cscratch1/sd/mmagana/for_EZmocks/fiberassign_EZ/fba001/

OUTPUTFILE = PATH/inputs/targ.fits

IS MISSING RSDZ!!
************************************************************************************************************************************************
************************************************************************************************************************************************

/global/cfs/cdirs/desi/survey/catalogs/SV3/LSS/tiles-DARK.fits is substitute for:
    name = 'TILEID'; format = 'K'
    name = 'RA'; format = 'D'
    name = 'DEC'; format = 'D'
    name = 'MTLTIME'; format = '25A'
    name = 'RUNDATE'; format = '25A'
    name = 'FIELDROT'; format = 'D'
    name = 'PROGRAM'; format = '4A'
    name = 'FA_HA'; format = 'D'
    name = 'OBSCONDITIONS'; format = 'K'
    name = 'IN_DESI'; format = 'K'

/project/projectdirs/desi/users/mvargas/for_EZmocks/Tiles_year1_formated.fits 2925
    name = 'TILEID'; format = 'K'
    name = 'PASS'; format = 'K'
    name = 'RA'; format = 'D'
    name = 'DEC'; format = 'D'
    name = 'PROGRAM'; format = '6A'
    name = 'IN_DESI'; format = 'L'
    name = 'PRIORITY'; format = 'D'
    name = 'STATUS'; format = '5A'
    name = 'EBV_MED'; format = 'D'
    name = 'DESIGNHA'; format = 'D'
    name = 'DONEFRAC'; format = 'D'
    name = 'AVAILABLE'; format = 'L'
    name = 'PRIORITY_BOOSTFAC'; format = 'D'
    name = 'OBSCONDITIONS'; format = 'K'

*** THIS IS THE ONE Why is different number of inputs/tiles.fits?  1698 ***

        ta['MTLTIME'] = mtlt
        ta['RUNDATE'] = fal
        ta['FIELDROT'] = obsl
        ta['FA_HA'] = hal



*** Change from LSS.globals import SV3 to have Y1 ***
ebits are the same?
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------
3) RuNING mkCAT to generate with duplicate files:

python mkMock_SV3.py --type dark --verspec mock --cuttar y --mockmtl y --id 0

>> ./mkM_bash.sh

-----------------------------------------------------------------------------------------------------------------------------------------------
4) Run mkfull and mkclustering to create final LSS catalogs for LRG, ELG and QSO:

python mkMock_SV3.py --type LRG --verspec mock --combd n --fulld y --clus y --id 0

>> ./mkM_LRG.sh
>> ./mkM_ELG.sh
>> ./mkM_QSO.sh 

---------------------------------------------------------------------------------------------------------------------------------------------------
FOR RANDOMS
---------------------------------------------------------------------------------------------------------------------------------------------------

1) Prepare randoms for fiber assigment:

>> python prepare_files_SV3_FirstGen_randoms.py  
OUTPUTFILE = '/global/cscratch1/sd/acarnero/SV3/mockRandom_{SNUM}_FirstGen_CutSky_alltracers_sv3bits.fits'

-------------------------------------------------------------------------------------------------------------------------------------------
2) Join randoms in batches of 5, selected randomly:

>> python join_randoms.py 

OUTPUTFILES = '/global/cscratch1/sd/acarnero/SV3/mockRandom_5X_{RANID}_FirstGen_CutSky_alltracers_sv3bits.fits'
INFO_FILE = 'info_join_randoms'

----------------------------------------------------------------------------------------------------------------------------------------
3) Run fba_run in randoms:

module swap fiberassign/5.3.0

fba_run --targets /global/cscratch1/sd/acarnero/SV3/mockRandom_5X_0_FirstGen_CutSky_alltracers_sv3bits.fits --sky /global/cfs/cdirs/desi/survey/catalogs/SV3/LSS/skies.fits --footprint /global/cfs/cdirs/desi/survey/catalogs/SV3/LSS/tiles-DARK.fits --dir /global/cscratch1/sd/acarnero/SV3/fba_randoms --prefix ran_5X_00_

OUTPUTFILES = '/global/cscratch1/sd/acarnero/SV3/fba_randoms/ran_5X_{RANDID}_000{TILEID}.fits'
>> ./execute_ran_fba.sh

--------------------------------------------------------------------------------------------------------------------------------------------
4) RuNING mkCAT to generate randoms with duplicate files

python mkMock_SV3_randoms.py --type dark --verspec mock --combr y --cutran y --ranmtl y --id 0

>> ./mKM_ran.sh

------------------------------------------------------------------------------------------------------------------------------------
5) Run randoms for mocks LRG, ELG, QSO:

>> python mkMock_SV3_randoms.py --type LRG --verspec mock --fullr y --clusran y --id 0

>> ./mKM_ran_LRG.sh
>> ./mKM_ran_ELG.sh
>> ./mKM_ran_QSO.sh

---------------------------------------------------------------------------------------------------------------------------------------
LSS ANALYSIS
---------------------------------------------------------------------------------------------------------------------------------------
1) Run xi stats on real data:

>> python xirunpc.py --type LRG --version 2.1
>> python xirunpc.py --type QSO --version 2.1
>> python xirunpc.py --type ELG --version 2.1

2) Run xi stats on mocks:

python ximock.py --type ELG --id 22

>> ./make_plots.sh 

3) Run xi stats BEFORE fiberassigment

>> ./make_plot_firstgen.sh

----------------------------------------------------------------------------------------------------------------------------------------
